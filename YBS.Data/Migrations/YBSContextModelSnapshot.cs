// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YBS.Data.Context;

#nullable disable

namespace YBS.Data.Migrations
{
    [DbContext(typeof(YBSContext))]
    partial class YBSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("YBS.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("OccuringTime")
                        .HasColumnType("time");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Activity", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.ActivityPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<float?>("EndLocationLatitude")
                        .HasColumnType("real");

                    b.Property<float?>("EndLocationLongtiude")
                        .HasColumnType("real");

                    b.Property<int?>("FromDockId")
                        .HasColumnType("int");

                    b.Property<float?>("StartLocationLatitude")
                        .HasColumnType("real");

                    b.Property<float?>("StartLocationLongtiude")
                        .HasColumnType("real");

                    b.Property<int?>("ToDockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("FromDockId");

                    b.HasIndex("ToDockId");

                    b.ToTable("ActivityPlace", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("MembershipPackageId")
                        .HasColumnType("int");

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int?>("YachtId")
                        .HasColumnType("int");

                    b.Property<int>("YachtTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MembershipPackageId");

                    b.HasIndex("RouteId");

                    b.HasIndex("YachtId");

                    b.HasIndex("YachtTypeId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.BookingPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("BookingPayment", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.BookingServicePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("ServicePackageId");

                    b.ToTable("BookingServicePackage", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotLine")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("LinkedInURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Dock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longtitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Dock", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.DockYachtType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DockId")
                        .HasColumnType("int");

                    b.Property<int>("YachtTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DockId");

                    b.HasIndex("YachtTypeId");

                    b.ToTable("DockYachtType", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("YachtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("YachtId");

                    b.ToTable("Facility", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Guest", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AvatarURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<DateTime>("MembershipExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MembershipPackageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MembershipSinceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<DateTime>("MembershipStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("MembershipPackageId");

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.MembershipPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EffectiveDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TimeUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("MembershipPackage", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.MembershipRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MembershipPackageId")
                        .HasColumnType("int");

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MembershipPackageId");

                    b.ToTable("MembershipRegistration", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.PriceMapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("YachtTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("YachtTypeId");

                    b.ToTable("PriceMapper", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Beginning")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("ExpectedEndingTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ExpectedStartingTime")
                        .HasColumnType("time");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Route", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.RouteServicePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("ServicePackageId");

                    b.ToTable("RouteServicePackage", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.ServicePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ServicePackage", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.ServicePackageItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServicePackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServicePackageId");

                    b.ToTable("ServicePackageItem", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BookingPaymentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MembershipRegistrationId")
                        .HasColumnType("int");

                    b.Property<string>("MoneyUnit")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingPaymentId")
                        .IsUnique()
                        .HasFilter("[BookingPaymentId] IS NOT NULL");

                    b.HasIndex("MembershipRegistrationId")
                        .IsUnique()
                        .HasFilter("[MembershipRegistrationId] IS NOT NULL");

                    b.HasIndex("WalletId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActualEndingTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ActualStartingTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Trip", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.UpdateRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotline")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("UpdateRequest", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Wallet", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Yacht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BEAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Cabin")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getDate()");

                    b.Property<int>("CrusingSpeed")
                        .HasColumnType("int");

                    b.Property<string>("DRAFT")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuelCapacity")
                        .HasColumnType("int");

                    b.Property<string>("FuelCapacityUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("GrossTonnage")
                        .HasColumnType("int");

                    b.Property<string>("GrossTonnageUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOA")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("int");

                    b.Property<int>("MaximumGuestLimit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<string>("RangeUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SpeedUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalCrew")
                        .HasColumnType("int");

                    b.Property<int>("YachtTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("YachtTypeId");

                    b.ToTable("Yacht", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.YachtMooring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DockId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LeaveTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("YachtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DockId");

                    b.HasIndex("YachtId");

                    b.ToTable("YachtMooring", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.YachtType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("YachtType", (string)null);
                });

            modelBuilder.Entity("YBS.Data.Models.Account", b =>
                {
                    b.HasOne("YBS.Data.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("YBS.Data.Models.Activity", b =>
                {
                    b.HasOne("YBS.Data.Models.Route", "Route")
                        .WithMany("Activities")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("YBS.Data.Models.ActivityPlace", b =>
                {
                    b.HasOne("YBS.Data.Models.Activity", "Activity")
                        .WithMany("ActivityPlaces")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.Dock", "FromDock")
                        .WithMany("ActivityPlacesFrom")
                        .HasForeignKey("FromDockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("YBS.Data.Models.Dock", "ToDock")
                        .WithMany("ActivityPlacesTo")
                        .HasForeignKey("ToDockId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Activity");

                    b.Navigation("FromDock");

                    b.Navigation("ToDock");
                });

            modelBuilder.Entity("YBS.Data.Models.Booking", b =>
                {
                    b.HasOne("YBS.Data.Models.Member", "Member")
                        .WithMany("Bookings")
                        .HasForeignKey("MemberId");

                    b.HasOne("YBS.Data.Models.MembershipPackage", "MembershipPackage")
                        .WithMany()
                        .HasForeignKey("MembershipPackageId");

                    b.HasOne("YBS.Data.Models.Route", "Route")
                        .WithMany("Bookings")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.Yacht", "Yacht")
                        .WithMany("Bookings")
                        .HasForeignKey("YachtId");

                    b.HasOne("YBS.Data.Models.YachtType", "YachtType")
                        .WithMany("Bookings")
                        .HasForeignKey("YachtTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("MembershipPackage");

                    b.Navigation("Route");

                    b.Navigation("Yacht");

                    b.Navigation("YachtType");
                });

            modelBuilder.Entity("YBS.Data.Models.BookingPayment", b =>
                {
                    b.HasOne("YBS.Data.Models.Booking", "Booking")
                        .WithOne("BookingPayment")
                        .HasForeignKey("YBS.Data.Models.BookingPayment", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YBS.Data.Models.BookingServicePackage", b =>
                {
                    b.HasOne("YBS.Data.Models.Booking", "Booking")
                        .WithMany("BookingServicePackages")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.ServicePackage", "ServicePackage")
                        .WithMany("BookingServicePackages")
                        .HasForeignKey("ServicePackageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("ServicePackage");
                });

            modelBuilder.Entity("YBS.Data.Models.Company", b =>
                {
                    b.HasOne("YBS.Data.Models.Account", "Account")
                        .WithOne("Company")
                        .HasForeignKey("YBS.Data.Models.Company", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("YBS.Data.Models.Dock", b =>
                {
                    b.HasOne("YBS.Data.Models.Company", "Company")
                        .WithMany("Docks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS.Data.Models.DockYachtType", b =>
                {
                    b.HasOne("YBS.Data.Models.Dock", "Dock")
                        .WithMany("DockYachtTypes")
                        .HasForeignKey("DockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.YachtType", "YachtType")
                        .WithMany("DockYachtTypes")
                        .HasForeignKey("YachtTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dock");

                    b.Navigation("YachtType");
                });

            modelBuilder.Entity("YBS.Data.Models.Facility", b =>
                {
                    b.HasOne("YBS.Data.Models.Yacht", "Yacht")
                        .WithMany("Facilities")
                        .HasForeignKey("YachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yacht");
                });

            modelBuilder.Entity("YBS.Data.Models.Guest", b =>
                {
                    b.HasOne("YBS.Data.Models.Booking", "Booking")
                        .WithMany("Guests")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YBS.Data.Models.Member", b =>
                {
                    b.HasOne("YBS.Data.Models.Account", "Account")
                        .WithOne("Member")
                        .HasForeignKey("YBS.Data.Models.Member", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.MembershipPackage", "MembershipPackage")
                        .WithMany("Members")
                        .HasForeignKey("MembershipPackageId");

                    b.Navigation("Account");

                    b.Navigation("MembershipPackage");
                });

            modelBuilder.Entity("YBS.Data.Models.MembershipRegistration", b =>
                {
                    b.HasOne("YBS.Data.Models.Member", "Member")
                        .WithMany("MembershipRegistrations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.MembershipPackage", "MembershipPackage")
                        .WithMany("MembershipRegistrations")
                        .HasForeignKey("MembershipPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("MembershipPackage");
                });

            modelBuilder.Entity("YBS.Data.Models.PriceMapper", b =>
                {
                    b.HasOne("YBS.Data.Models.Route", "Route")
                        .WithMany("PriceMappers")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.YachtType", "YachtType")
                        .WithMany("PriceMappers")
                        .HasForeignKey("YachtTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("YachtType");
                });

            modelBuilder.Entity("YBS.Data.Models.RefreshToken", b =>
                {
                    b.HasOne("YBS.Data.Models.Account", "Account")
                        .WithOne("RefreshToken")
                        .HasForeignKey("YBS.Data.Models.RefreshToken", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("YBS.Data.Models.Route", b =>
                {
                    b.HasOne("YBS.Data.Models.Company", "Company")
                        .WithMany("Routes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS.Data.Models.RouteServicePackage", b =>
                {
                    b.HasOne("YBS.Data.Models.Route", "Route")
                        .WithMany("RouteServicePackages")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.ServicePackage", "ServicePackage")
                        .WithMany("RouteServicePackages")
                        .HasForeignKey("ServicePackageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("ServicePackage");
                });

            modelBuilder.Entity("YBS.Data.Models.Service", b =>
                {
                    b.HasOne("YBS.Data.Models.Company", null)
                        .WithMany("Services")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("YBS.Data.Models.ServicePackage", b =>
                {
                    b.HasOne("YBS.Data.Models.Company", "Company")
                        .WithMany("ServicePackages")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS.Data.Models.ServicePackageItem", b =>
                {
                    b.HasOne("YBS.Data.Models.Service", "Service")
                        .WithMany("ServicePackageItems")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.ServicePackage", "ServicePackage")
                        .WithMany("ServicePackageItems")
                        .HasForeignKey("ServicePackageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("ServicePackage");
                });

            modelBuilder.Entity("YBS.Data.Models.Transaction", b =>
                {
                    b.HasOne("YBS.Data.Models.BookingPayment", "BookingPayment")
                        .WithOne("Transaction")
                        .HasForeignKey("YBS.Data.Models.Transaction", "BookingPaymentId");

                    b.HasOne("YBS.Data.Models.MembershipRegistration", "MembershipRegistration")
                        .WithOne("Transaction")
                        .HasForeignKey("YBS.Data.Models.Transaction", "MembershipRegistrationId");

                    b.HasOne("YBS.Data.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId");

                    b.Navigation("BookingPayment");

                    b.Navigation("MembershipRegistration");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("YBS.Data.Models.Trip", b =>
                {
                    b.HasOne("YBS.Data.Models.Booking", "Booking")
                        .WithOne("Trip")
                        .HasForeignKey("YBS.Data.Models.Trip", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YBS.Data.Models.UpdateRequest", b =>
                {
                    b.HasOne("YBS.Data.Models.Company", "Company")
                        .WithMany("UpdateRequests")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS.Data.Models.Wallet", b =>
                {
                    b.HasOne("YBS.Data.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("YBS.Data.Models.Yacht", b =>
                {
                    b.HasOne("YBS.Data.Models.Company", "Company")
                        .WithMany("Yachts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.YachtType", "YachtType")
                        .WithMany("Yachts")
                        .HasForeignKey("YachtTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("YachtType");
                });

            modelBuilder.Entity("YBS.Data.Models.YachtMooring", b =>
                {
                    b.HasOne("YBS.Data.Models.Dock", "Dock")
                        .WithMany("YachtMoorings")
                        .HasForeignKey("DockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YBS.Data.Models.Yacht", "Yacht")
                        .WithMany("YachtMoorings")
                        .HasForeignKey("YachtId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dock");

                    b.Navigation("Yacht");
                });

            modelBuilder.Entity("YBS.Data.Models.YachtType", b =>
                {
                    b.HasOne("YBS.Data.Models.Company", null)
                        .WithMany("YachtTypes")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("YBS.Data.Models.Account", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("Member");

                    b.Navigation("RefreshToken");
                });

            modelBuilder.Entity("YBS.Data.Models.Activity", b =>
                {
                    b.Navigation("ActivityPlaces");
                });

            modelBuilder.Entity("YBS.Data.Models.Booking", b =>
                {
                    b.Navigation("BookingPayment");

                    b.Navigation("BookingServicePackages");

                    b.Navigation("Guests");

                    b.Navigation("Trip")
                        .IsRequired();
                });

            modelBuilder.Entity("YBS.Data.Models.BookingPayment", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("YBS.Data.Models.Company", b =>
                {
                    b.Navigation("Docks");

                    b.Navigation("Routes");

                    b.Navigation("ServicePackages");

                    b.Navigation("Services");

                    b.Navigation("UpdateRequests");

                    b.Navigation("YachtTypes");

                    b.Navigation("Yachts");
                });

            modelBuilder.Entity("YBS.Data.Models.Dock", b =>
                {
                    b.Navigation("ActivityPlacesFrom");

                    b.Navigation("ActivityPlacesTo");

                    b.Navigation("DockYachtTypes");

                    b.Navigation("YachtMoorings");
                });

            modelBuilder.Entity("YBS.Data.Models.Member", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MembershipRegistrations");
                });

            modelBuilder.Entity("YBS.Data.Models.MembershipPackage", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("MembershipRegistrations");
                });

            modelBuilder.Entity("YBS.Data.Models.MembershipRegistration", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("YBS.Data.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("YBS.Data.Models.Route", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Bookings");

                    b.Navigation("PriceMappers");

                    b.Navigation("RouteServicePackages");
                });

            modelBuilder.Entity("YBS.Data.Models.Service", b =>
                {
                    b.Navigation("ServicePackageItems");
                });

            modelBuilder.Entity("YBS.Data.Models.ServicePackage", b =>
                {
                    b.Navigation("BookingServicePackages");

                    b.Navigation("RouteServicePackages");

                    b.Navigation("ServicePackageItems");
                });

            modelBuilder.Entity("YBS.Data.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("YBS.Data.Models.Yacht", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Facilities");

                    b.Navigation("YachtMoorings");
                });

            modelBuilder.Entity("YBS.Data.Models.YachtType", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("DockYachtTypes");

                    b.Navigation("PriceMappers");

                    b.Navigation("Yachts");
                });
#pragma warning restore 612, 618
        }
    }
}
